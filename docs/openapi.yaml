openapi: 3.0.2
info:
  version: 1.0.0
  title: Booking Shopify Api
servers:
  - url: 'http://localhost:7071/api'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    MesssageErrorResponse:
      description: Message error response
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                $ref: '#/components/schemas/MessageError'
    ValidationErrorResponse:
      description: Validation error response
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
  schemas:
    ValidationError:
      type: object
      properties:
        path:
          type: array
          items:
            type: string
        message:
          type: string
        code:
          type: string
        expected:
          type: string
        received:
          type: number
      required:
        - path
        - message
        - code
    MessageError:
      type: string
      example: An error message
    UserModel:
      type: object
      properties:
        active:
          type: boolean
          default: true
        address:
          type: string
        avatar:
          type: string
        email:
          type: string
          uniqueItems: true
        fullname:
          type: string
        group:
          type: string
          default: all
        language:
          type: string
          default: da
        phone:
          type: string
          uniqueItems: true
        position:
          type: string
        postal:
          type: integer
        timeZone:
          type: string
          default: Europe/Copenhagen
      required:
        - fullname
        - email
        - phone
        - postal
        - position
        - avatar
    AuthLoginSuccess:
      type: object
      properties:
        success:
          type: boolean
          example: true
        token:
          type: string
          example: Token to be saved in browser
      required:
        - success
        - token
paths:
  /auth/login:
    post:
      summary: Logs in a user
      description: This endpoint return to you token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identification:
                  type: string
                  example: 31317428
                password:
                  type: string
                  example: code
              required:
                - identification
                - password
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
  /auth/receive-password:
    post:
      summary: Receive password
      description: This endpoint receives a password using a phone number provided in the request body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: 31317428
                  description: The phone number associated with the password
              required:
                - phone
      responses:
        '200':
          description: Password received successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password received successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
  /create-user:
    post:
      summary: Create user with api key
      description: 'This endpoint is special and should be used to create new user with api key, and not logged in user.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Receive user that are created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
  /my-account:
    get:
      summary: Get my-account data
      description: This endpoint get account data.
      responses:
        '200':
          description: Receive account data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/UserModel'
      security:
        - BearerAuth: []
    put:
      summary: Update my-account data
      description: This endpoint update account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Receive user that are updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
      security:
        - BearerAuth: []
  /user:
    get:
      summary: Get a list of users
      description: 'This endpoint gets all users, in case you are logged in as admin or user, only same group'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserModel'
      security:
        - BearerAuth: []
    post:
      summary: Create user
      description: This endpoint create new user with api key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/paths/~1create-user/post/responses/200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
      security:
        - BearerAuth: []
  '/user/{id}':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    get:
      summary: Get user by id
      description: This endpoint gets user object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
      security:
        - BearerAuth: []
    put:
      summary: Update user by id
      description: This endpoint update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Receive user that are updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/MesssageErrorResponse/content/application~1json/schema'
                  - $ref: '#/components/responses/ValidationErrorResponse/content/application~1json/schema'
      security:
        - BearerAuth: []
