openapi: 3.0.2
info:
  version: 1.0.0
  title: Booking Shopify Api
servers:
  - url: 'http://localhost:7071/api'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    ErrorResponse:
      description: 'Error happened, either message error or validation error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    UserResponse:
      description: Response with UserModel payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserResponse'
    UsersResponse:
      description: Response with Array of UserModel payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersResponse'
  schemas:
    ErrorModel:
      oneOf:
        - $ref: '#/components/schemas/MessageError'
        - $ref: '#/components/schemas/ValidationError'
    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: array
          items:
            type: object
            properties:
              path:
                type: array
                items:
                  type: string
              message:
                type: string
              code:
                type: string
              expected:
                type: string
              received:
                type: number
            required:
              - path
              - message
              - code
    MessageError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: error message
    AuthLoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        token:
          type: string
          example: Token to be saved in browser
      required:
        - success
        - token
    AuthLoginRequest:
      type: object
      properties:
        identification:
          type: string
          example: 31317428
        password:
          type: string
          example: code
      required:
        - identification
        - password
    AuthPasswordResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Password received successfully
    AuthPasswordRequest:
      type: object
      properties:
        phone:
          type: string
          example: 31317428
          description: The phone number associated with the password
      required:
        - phone
    UserModel:
      type: object
      properties:
        active:
          type: boolean
          default: true
        address:
          type: string
        avatar:
          type: string
        email:
          type: string
          uniqueItems: true
        fullname:
          type: string
        group:
          type: string
          default: all
        language:
          type: string
          default: da
        phone:
          type: string
          uniqueItems: true
        position:
          type: string
        postal:
          type: integer
        timeZone:
          type: string
          default: Europe/Copenhagen
      required:
        - fullname
        - email
        - phone
        - postal
        - position
        - avatar
    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/UserModel'
    UsersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
paths:
  /auth/login:
    post:
      operationId: login
      summary: Logs in a user
      description: This endpoint return to you token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /auth/receive-password:
    post:
      operationId: receivePassword
      summary: Receive password
      description: This endpoint receives a password using a phone number provided in the request body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPasswordRequest'
      responses:
        '200':
          description: Password received successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPasswordResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /create-user:
    post:
      operationId: createUserApi
      summary: Create user with api key
      description: 'This endpoint is special and should be used to create new user with api key, and not logged in user.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
  /my-account:
    get:
      operationId: getMyAccount
      summary: Get my-account data
      description: This endpoint get account data.
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
      security:
        - BearerAuth: []
    put:
      summary: Update my-account data
      description: This endpoint update account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  /user:
    get:
      operationId: getAllUsers
      summary: Get a list of users
      description: 'This endpoint gets all users, in case you are logged in as admin or user, only same group'
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      security:
        - BearerAuth: []
    post:
      operationId: createUser
      summary: Create user
      description: This endpoint create new user with api key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  '/user/{id}':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    get:
      operationId: getUser
      summary: Get user by id
      description: This endpoint gets user object
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      operationId: updateUser
      summary: Update user by id
      description: This endpoint update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
