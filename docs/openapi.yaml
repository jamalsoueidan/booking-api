openapi: 3.0.2
info:
  version: 1.0.0
  title: Booking Shopify Api
  license:
    name: MIT
    url: 'http://'
  x-tagGroups:
    - name: all api endpoints
      tags:
        - Auth
        - My Account
        - User
        - Shift
servers:
  - url: 'http://localhost:7071/api'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    ErrorResponse:
      description: 'Error happened, either message error or validation error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    UserResponse:
      description: Response with UserModel payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserResponse'
    UsersResponse:
      description: Response with Array of UserModel payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersResponse'
  schemas:
    ErrorModel:
      oneOf:
        - $ref: '#/components/schemas/MessageError'
        - $ref: '#/components/schemas/ValidationError'
    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: array
          items:
            type: object
            properties:
              path:
                type: array
                items:
                  type: string
              message:
                type: string
              code:
                type: string
              expected:
                type: string
              received:
                type: number
            required:
              - path
              - message
              - code
    MessageError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: error message
    AuthLoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        token:
          type: string
          example: Token to be saved in browser
      required:
        - success
        - token
    AuthLoginRequest:
      type: object
      properties:
        identification:
          type: string
          example: 31317428
        password:
          type: string
          example: code
      required:
        - identification
        - password
    AuthPasswordResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Password received successfully
    AuthPasswordRequest:
      type: object
      properties:
        phone:
          type: string
          example: 31317428
          description: The phone number associated with the password
      required:
        - phone
    UserCreateOrUpdateModel:
      type: object
      properties:
        active:
          type: boolean
          default: true
        address:
          type: string
        avatar:
          type: string
        email:
          type: string
          uniqueItems: true
        fullname:
          type: string
        group:
          type: string
          default: all
        language:
          type: string
          default: da
        phone:
          type: string
          uniqueItems: true
        position:
          type: string
        postal:
          type: integer
        timeZone:
          type: string
          default: Europe/Copenhagen
      required:
        - fullname
        - email
        - phone
        - postal
        - position
        - avatar
    UserModel:
      type: object
      properties:
        _id:
          type: string
        active:
          type: boolean
          default: true
        address:
          type: string
        avatar:
          type: string
        email:
          type: string
          uniqueItems: true
        fullname:
          type: string
        group:
          type: string
          default: all
        language:
          type: string
          default: da
        phone:
          type: string
          uniqueItems: true
        position:
          type: string
        postal:
          type: integer
        timeZone:
          type: string
          default: Europe/Copenhagen
      required:
        - fullname
        - email
        - phone
        - postal
        - position
        - avatar
    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/UserModel'
    UsersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
    ShiftCreateBody:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
      required:
        - end
        - userId
        - start
        - tag
    ShiftCreate:
      type: object
      properties:
        _id:
          type: string
        end:
          type: string
          format: date-time
        userId:
          type: string
        start:
          type: string
          format: date-time
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
      required:
        - _id
        - end
        - userId
        - start
        - tag
    ShiftCreateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/ShiftCreate'
    ShiftCreateGroupBody:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
      required:
        - end
        - userId
        - start
        - day
        - tag
    ShiftCreateGroup:
      type: object
      properties:
        end:
          type: string
          format: date-time
        groupId:
          type: string
        userId:
          type: string
        start:
          type: string
          format: date-time
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
        day:
          type: array
          items:
            type: string
            enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
      required:
        - _id
        - end
        - groupId
        - userId
        - start
        - tag
        - day
    ShiftCreateGroupResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/ShiftCreateGroup'
    ShiftDestroy:
      type: object
      properties:
        acknowledged:
          type: boolean
        deletedCount:
          type: number
      required:
        - acknowledged
        - deletedCount
    ShiftDestroyResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/ShiftDestroy'
    ShiftDestroyGroup:
      type: object
      properties:
        acknowledged:
          type: boolean
        deletedCount:
          type: number
      required:
        - acknowledged
        - deletedCount
    ShiftDestroyGroupResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/ShiftDestroyGroup'
    ShiftGetAll:
      type: object
      properties:
        _id:
          type: string
        end:
          type: string
          format: date-time
        userId:
          type: string
        start:
          type: string
          format: date-time
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
      required:
        - _id
        - end
        - userId
        - start
        - tag
    ShiftGetAllResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          type: array
          items:
            $ref: '#/components/schemas/ShiftGetAll'
    ShiftGetGroup:
      type: object
      properties:
        end:
          type: string
          format: date-time
        groupId:
          type: string
        userId:
          type: string
        start:
          type: string
          format: date-time
        tag:
          type: string
          enum:
            - weekday
            - weekend
            - all_day
            - end_of_week
            - start_of_week
            - middle_of_week
      required:
        - _id
        - end
        - userId
        - start
        - tag
    ShiftGetGroupResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        payload:
          $ref: '#/components/schemas/ShiftGetGroup'
paths:
  /auth/login:
    post:
      tags:
        - Auth
      operationId: login
      summary: Logs in a user
      description: This endpoint return to you token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security: []
  /auth/receive-password:
    post:
      tags:
        - Auth
      operationId: receivePassword
      summary: Receive password
      description: This endpoint receives a password using a phone number provided in the request body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPasswordRequest'
      responses:
        '200':
          description: Password received successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPasswordResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security: []
  /my-account:
    get:
      tags:
        - My Account
      operationId: getMyAccount
      summary: Get my-account data
      description: This endpoint get account data.
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
      security:
        - BearerAuth: []
    put:
      tags:
        - My Account
      operationId: updateMyAccount
      summary: Update my-account data
      description: This endpoint update account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  /users:
    get:
      tags:
        - User
      operationId: usersGetAll
      summary: GET All users
      description: 'This endpoint gets all users, in case you are logged in as admin or user, only same group'
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
      security:
        - BearerAuth: []
  /user/create-user-api:
    post:
      tags:
        - User
      operationId: createUserApi
      summary: 'POST Create user [api]'
      description: 'This endpoint is special and should be used to create new user with api key, and not logged in user.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrUpdateModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security: []
  /user:
    post:
      tags:
        - User
      operationId: createUser
      summary: POST Create user
      description: This endpoint create new user with api key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrUpdateModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth:
            - owner
            - admin
  '/user/{id}':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    get:
      tags:
        - User
      operationId: getUser
      summary: GET Get user
      description: This endpoint gets user object
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      tags:
        - User
      operationId: updateUser
      summary: PUT Update user
      description: This endpoint update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrUpdateModel'
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth:
            - owner
            - admin
  '/user/{userId}/shift-group':
    parameters:
      - name: userId
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    post:
      tags:
        - Shift
      operationId: createShiftGroup
      summary: POST Create shift group
      description: This endpoint create new shift group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftCreateGroupBody'
      responses:
        '200':
          description: Response with ..
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCreateGroupResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  '/user/{userId}/shifts':
    parameters:
      - name: userId
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    get:
      tags:
        - Shift
      operationId: getAllShifts
      summary: GET Get all shifts
      description: This endpoint get all shifts
      responses:
        '200':
          description: Response ShiftDestroyGroup model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftGetAllResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  '/user/{userId}/shift':
    parameters:
      - name: userId
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    post:
      tags:
        - Shift
      operationId: createShift
      summary: POST Create shift
      description: This endpoint create new shift
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftCreateBody'
      responses:
        '200':
          description: Response with Array of ShiftModel payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCreateResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  '/user/{userId}/shift-group/{groupId}':
    parameters:
      - name: userId
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
      - name: groupId
        in: path
        description: The ID of the group
        required: true
        schema:
          type: string
    get:
      tags:
        - Shift
      operationId: getShiftGroup
      summary: GET Get shift group
      description: This endpoint get shift group by id
      responses:
        '200':
          description: get shift group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftGetGroupResponse'
      security:
        - BearerAuth: []
    put:
      tags:
        - Shift
      operationId: updateShiftGroup
      summary: PUT Update shift group
      description: This endpoint update shift group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                end:
                  type: string
                  format: date-time
                start:
                  type: string
                  format: date-time
                day:
                  type: string
                  enum:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                tag:
                  type: string
                  enum:
                    - weekday
                    - weekend
                    - all_day
                    - end_of_week
                    - start_of_week
                    - middle_of_week
              required:
                - end
                - userId
                - start
                - day
                - tag
      responses:
        '200':
          description: Response with updated model
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    type: object
                    properties:
                      end:
                        type: string
                        format: date-time
                      groupId:
                        type: string
                      userId:
                        type: string
                      start:
                        type: string
                        format: date-time
                      tag:
                        type: string
                        enum:
                          - weekday
                          - weekend
                          - all_day
                          - end_of_week
                          - start_of_week
                          - middle_of_week
                      day:
                        type: array
                        items:
                          type: string
                          enum:
                            - monday
                            - tuesday
                            - wednesday
                            - thursday
                            - friday
                            - saturday
                    required:
                      - _id
                      - end
                      - groupId
                      - userId
                      - start
                      - tag
                      - day
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - Shift
      operationId: destroyShiftGroup
      summary: DEL Delete shift group
      description: This endpoint delete shift group
      responses:
        '200':
          description: Response ShiftDestroyGroup model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftDestroyGroupResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
  '/user/{userId}/shift/{id}':
    parameters:
      - name: id
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: The ID of the user
        required: true
        schema:
          type: string
    put:
      tags:
        - Shift
      operationId: updateShift
      summary: PUT Update shift
      description: This endpoint update shift
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                end:
                  type: string
                  format: date-time
                start:
                  type: string
                  format: date-time
                tag:
                  type: string
                  enum:
                    - weekday
                    - weekend
                    - all_day
                    - end_of_week
                    - start_of_week
                    - middle_of_week
              required:
                - end
                - userId
                - start
                - tag
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  payload:
                    type: object
                    properties:
                      _id:
                        type: string
                      end:
                        type: string
                        format: date-time
                      userId:
                        type: string
                      start:
                        type: string
                        format: date-time
                      tag:
                        type: string
                        enum:
                          - weekday
                          - weekend
                          - all_day
                          - end_of_week
                          - start_of_week
                          - middle_of_week
                    required:
                      - _id
                      - end
                      - userId
                      - start
                      - tag
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
    delete:
      tags:
        - Shift
      operationId: destroyShift
      summary: DEL Delete shift
      description: This endpoint delete shift
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftDestroyResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
      security:
        - BearerAuth: []
tags:
  - name: Auth
    description: Login and reset password
  - name: My Account
    description: Manage logged in user data.
  - name: User
    description: Manage users..
  - name: Shift
    description: Manage shifts for user.
